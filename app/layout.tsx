import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import {compile} from 'json-schema-to-typescript'
import {JSONSchema4TypeName} from "json-schema";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const testData: JSONSchema4TypeName = {
    type: 'object',
    properties: {
      name: {
        type: 'string'
      },
      age: {
        type: 'number'
      }
    }
  }

  const compiled = compile(testData, 'TestSchema', {bannerComment: ''})

  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
        <div>
          Compiled: <br/><br/><br/>
          <pre>{compiled}</pre>
        </div>
      </body>
    </html>
  );
}
